<?php
    function convertBinToDec($binary){
        $decimal = 0;
        $grade = 0;
        while ($binary > 0){
            if (fmod ($binary, 10) == 1){
                $decimal = $decimal + grade(2, $grade);
            }
            $grade += 1;
            $binary = intdiv($binary, 10);
        }
        return $decimal;
    }

    function convertBinToDecRec($binary){
        if ($binary === 0) {
            return 0;
        }
            return $binary % 10 + 2 * convertBinToDec($binary / 10);
        }

    function convertDecToBin($decimal){
        $binary = "";
        while (floor ($decimal) > 0){
            $binary .= $decimal % 2;
            $decimal /= 2;
        }
        return strrev ($binary);
    }

    function convertDecToBinRec($decimal){
        if ($decimal === 0){
            return 0;
        }
        return ($decimal % 2) + 10 * convertDecToBinRec($decimal / 2);
    }

    function fibonacci($num){
        $fibminustwo = 1;
        $fibminusone = 1;
        for ($i = 3; $i <= $num; $i++){
            $fibsum = $fibminustwo + $fibminusone;
            $fibminustwo = $fibminusone;
            $fibminusone = $fibsum;
        }
        return $fibsum;
    }

    function fibonacciRec($num){
        if ($num <= 1){
            return 1;
       }
       return fibonacciRec($num - 1) + fibonacciRec($num - 2);
    }

    function grade($num, $grade){
        $result = 1;
        for ($i = 0; $i < $grade; $i++){
            $result *= $num;
        }
        if ($grade === 0) {
            $result = 1;
        }
        return $result;
    }

    function gradeRec($number, $grade){
        if ($grade !== 0){
            return $number * grade($number, $grade - 1);
        }
        return 1;
    }

    function checkIP($iptocheck, $ipmin, $ipmax){
        $arraytocheck = explode(".", $iptocheck);
        $arraymin = explode(".", $ipmin);
        $arraymax = explode(".", $ipmax);
        $checkcount = 0;
        for ($i = 0; $i < count($arraytocheck); $i++){
            if ($arraytocheck[$i] >= $arraymin[$i] && $arraytocheck[$i] <= $arraymax[$i]){
               $checkcount += 1;
           }
        }
        if ($checkcount === 4){
            return true;
        }
            return false;
        }
    }

    function checkIPRec($iptocheck, $ipmin, $ipmax, $count = 0){
        if ($count === 4){
            return true;
        }
        $arraytocheck = $iptocheck[$count];
        $arraymin = $ipmin[$count];
        $arraymax = $ipmax[$count];
        if ($arraytocheck >= $arraymin && $arraytocheck <= $arraymax){
            return checkIPRec($iptocheck, $ipmin, $ipmax, $count + 1);
        }
        return false;
    }

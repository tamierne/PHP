<?php
    function convertBinToDec($binary){
        $decimal = 0;
        $grade = 0;
        while ($binary > 0){
            $i = fmod ($binary, 10);
            if ($i == 1) {
                $decimal = $decimal + grade(2, $grade);
            }
            $grade += 1;
            $binary = intdiv($binary, 10);
        }
        return $decimal;
    }

    function convertDecToBin($decimal){
        $i = "";
        while (floor ($decimal) > 0){
            $i .= $decimal % 2;
            $decimal /= 2;
        }
        return strrev ($i);
    }

    function fibonacci($num){
        $fibminustwo = 1;
        $fibminusone = 1;
        for ($i = 3; $i <= $num; $i++){
            $fibsum = $fibminustwo + $fibminusone;
            $fibminustwo = $fibminusone;
            $fibminusone = $fibsum;
        }
        return $fibsum;
    }

    function grade($num, $grade){
        $result = 1;
        for ($i = 0; $i < $grade; $i++){
            $result *= $num;
        }
        if ($grade == 0) {
            $result = 1;
        }
        return $result;
    }
    
    function checkIP($iptocheck, $ipmin, $ipmax){
        $arraytocheck = explode(".", $iptocheck);
        $arraymin = explode(".", $ipmin);
        $arraymax = explode(".", $ipmax);
        $numberofelements = count($arraytocheck);
        $checkcount = 0;
        for ($i = 0; $i <= $numberofelements; $i++){
            if ($arraytocheck[$i] >= $arraymin[$i] && $arraytocheck[$i] <= $arraymax[$i]){
               $checkcount += 1;
           }
        }
        if ($checkcount == 4) {return TRUE;}
        else {return FALSE;}
    }
    
/*        function arrayStat($values){
        $number = count($values);
        $pos = 0;
        $neg = 0;
        $prime = 0;
        $zero = 0;
        foreach ($values as $i){
            if ($i > 0){
                $pos += 1;
            }
            elseif ($i < 0){
                $neg += 1;
            }
            elseif ($$i == 0){
                $zero += 1;
            }
            if (primeCheck($i) == true){
                $prime += 1;
            }
            }
        $list = [$pos, $neg, $zero/*, $prime */];
        $listnumber = count($list);
        for ($i = 0; $i < $listnumber; $i++){
            $summary[$i] = $list[$i] / count($values) * 100;
        }
        return $summary;
    }
*/

    function sortArray($values){
        $number = count($values);
        do{
            $switch = false;
            for ($i = 0; $i < $number; $i++){
                if ($values[$i] > $values[$i + 1]){
                    $bubble = $values[$i];
                    $values[$i] = $values[$i + 1];
                    $values[$i + 1] = $bubble;
                    $switch = true;
                }
            }
        } while ($switch == true);
        return $values;
    }
    
    function primeCheck($num){
        if ($num < 1 || is_int($num) == false){
            return false;
        }
        for ($i = 2; $i < $num; $i++){
            if ($num % $i == 0){
                return false;
            }
        }
        return true;    
    }
